# .github/workflows/local-smoke.yml
name: Local Front‑end & Back‑end Smoke Test

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

concurrency:
  group: smoke-test-${{ github.ref }}
  cancel-in-progress: true

jobs:
  smoke-test:
    runs-on: ubuntu-latest
    shell: bash

    strategy:
      matrix:
        python-version: ["3.11"]

    env:
      BACKEND_PORT: 8000
      FRONTEND_PORT: 3000

    steps:
      - name: ⬇️ Checkout repository
        uses: actions/checkout@v3

      # ───────────────────────────────────────────────
      # 1 · Back‑end (avatar‑service)
      - name: 🐍 Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - name: 🛠️ Install back‑end deps
        working-directory: services/avatar-service
        run: |
          python -m venv .venv
          source .venv/bin/activate
          pip install --upgrade pip
          pip install fastapi uvicorn requests pydantic

      - name: ▶️ Start avatar‑service
        working-directory: services/avatar-service
        run: |
          source .venv/bin/activate
          uvicorn app.main:app \
            --host 0.0.0.0 --port $BACKEND_PORT &

          echo "Waiting for avatar‑service on port $BACKEND_PORT…"
          for i in {1..20}; do
            if curl -s http://localhost:$BACKEND_PORT/avatars >/dev/null; then
              echo "✅ avatar‑service is up!"
              break
            fi
            sleep 1
          done

      # ───────────────────────────────────────────────
      # 2 · Front‑end (React/Vite SPA)
      - name: 🟢 Set up Node 18
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: "npm"

      - name: 📦 Install & build SPA
        working-directory: frontend
        run: |
          npm ci
          npm run build
          # serve the prod build:
          npx --yes serve -s dist -l $FRONTEND_PORT &

          echo "Waiting for SPA on port $FRONTEND_PORT…"
          for i in {1..20}; do
            if curl -s http://localhost:$FRONTEND_PORT/ >/dev/null; then
              echo "✅ SPA is up!"
              break
            fi
            sleep 1
          done

      # ───────────────────────────────────────────────
      # 3 · Smoke tests
      - name: 🔍 GET /avatars
        run: |
          echo "→ GET /avatars"
          curl -i http://localhost:$BACKEND_PORT/avatars

      - name: 🔍 GET /
        run: |
          echo "→ GET /"
          curl -i http://localhost:$FRONTEND_PORT/

      # ───────────────────────────────────────────────
      # 4 · make check (if defined)
      - name: 🧪 make check
        if: ${{ always() && (hashFiles('Makefile') != '') }}
        run: |
          if make check; then
            echo "✅ make check passed"
          else
            echo "⚠️ make check failed (continuing)"
          fi

      # ───────────────────────────────────────────────
      # 5 · Cleanup background servers
      - name: 🧹 Kill background servers
        if: always()
        run: |
          pkill -f "uvicorn" || true
          pkill -f "serve"   || true
