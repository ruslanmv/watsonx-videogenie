# .github/workflows/local-smoke.yml
name: Local Dev Smoke Test (Ubuntu)

on:
  push:
    branches: [ main ]

jobs:
  smoke-test:
    runs-on: ubuntu-latest
    env:
      BACKEND_PORT: 8000
      FRONTEND_PORT: 3000

    steps:
      # ─────────────────────────────────────────────────────────
      # 1) Checkout source
      - name: ⬇️  Checkout repo
        uses: actions/checkout@v3

      # ─────────────────────────────────────────────────────────
      # 2) Back‑end (avatar‑service)
      - name: 🐍  Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: 🛠️  Install avatar‑service deps
        working-directory: services/avatar-service
        run: |
          python -m venv .venv
          source .venv/bin/activate
          pip install --upgrade pip
          pip install fastapi uvicorn requests pydantic

      - name: ▶️  Start avatar‑service
        working-directory: services/avatar-service
        run: |
          source .venv/bin/activate
          uvicorn app.main:app --host 0.0.0.0 --port $BACKEND_PORT &
          for i in {1..20}; do
            curl -s http://localhost:$BACKEND_PORT/avatars && break
            sleep 1
          done

      # ─────────────────────────────────────────────────────────
      # 3) Front‑end (React/Vite SPA)
      - name: 🟢  Set up Node 18
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: 📦  Install & build SPA
        working-directory: frontend
        run: |
          npm ci
          npm run build
          npx --yes serve -s dist -l $FRONTEND_PORT &
          for i in {1..20}; do
            curl -s http://localhost:$FRONTEND_PORT/ && break
            sleep 1
          done

      # ─────────────────────────────────────────────────────────
      # 4) Smoke tests
      - name: 🔍  GET /avatars
        run: curl -sf http://localhost:$BACKEND_PORT/avatars

      - name: 🔍  GET / (SPA)
        run: curl -sf http://localhost:$FRONTEND_PORT/

      # ─────────────────────────────────────────────────────────
      # 5) Clean up background servers
      - name: 🧹  Kill background servers
        if: always()
        run: |
          pkill -f "uvicorn" || true
          pkill -f "serve"   || true
